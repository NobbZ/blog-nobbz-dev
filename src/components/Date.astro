---
import { DateTime } from 'luxon';

export interface Props extends astroHTML.JSX.HTMLAttributes {
	format?: string;
	datetime: Date | string | null | undefined;
}

const { datetime: _, ...props } = Astro.props;

const { datetime, format } = Astro.props;
const datetimeStr = datetime instanceof Date ? datetime.toISOString() : datetime;
console.log({ type: typeof datetime, datetime, datetimeStr });

let { lang } = Astro.props;
lang = lang || 'en';

const timeData = { lang, datetime: datetimeStr, 'data-format': format };

console.log({ format });
---

<time data-relative {...props} {...timeData}><slot>{datetimeStr}</slot></time>

<script>
	import { DateTime } from 'luxon';

	const dateElemets = document.querySelectorAll<HTMLTimeElement>('[data-relative]');

	dateElemets.forEach((element) => {
		const date: DateTime = DateTime.fromISO(element.dateTime);

		const relative = date.setLocale(element.lang).toRelativeCalendar();
		const format = element.dataset.format || 'yyyy-MM-dd';
		console.log({ format });

		element.innerHTML = `<abbr title="${date.toFormat(format)}">${relative}</abbr>`;
	});
</script>
